// Code generated by "enumer -type OrderPlacementSrc -transform snake_upper -json -trimprefix OrderPlacementSrc"; DO NOT EDIT.

package coinbase

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _OrderPlacementSrcName = "UNKNOWN_PLACEMENT_SOURCERETAIL_SIMPLERETAIL_ADVANCED"

var _OrderPlacementSrcIndex = [...]uint8{0, 24, 37, 52}

const _OrderPlacementSrcLowerName = "unknown_placement_sourceretail_simpleretail_advanced"

func (i OrderPlacementSrc) String() string {
	if i >= OrderPlacementSrc(len(_OrderPlacementSrcIndex)-1) {
		return fmt.Sprintf("OrderPlacementSrc(%d)", i)
	}
	return _OrderPlacementSrcName[_OrderPlacementSrcIndex[i]:_OrderPlacementSrcIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _OrderPlacementSrcNoOp() {
	var x [1]struct{}
	_ = x[UnknownPlacementSource-(0)]
	_ = x[OrderPlacementSrcRetailSimple-(1)]
	_ = x[OrderPlacementSrcRetailAdvanced-(2)]
}

var _OrderPlacementSrcValues = []OrderPlacementSrc{UnknownPlacementSource, OrderPlacementSrcRetailSimple, OrderPlacementSrcRetailAdvanced}

var _OrderPlacementSrcNameToValueMap = map[string]OrderPlacementSrc{
	_OrderPlacementSrcName[0:24]:       UnknownPlacementSource,
	_OrderPlacementSrcLowerName[0:24]:  UnknownPlacementSource,
	_OrderPlacementSrcName[24:37]:      OrderPlacementSrcRetailSimple,
	_OrderPlacementSrcLowerName[24:37]: OrderPlacementSrcRetailSimple,
	_OrderPlacementSrcName[37:52]:      OrderPlacementSrcRetailAdvanced,
	_OrderPlacementSrcLowerName[37:52]: OrderPlacementSrcRetailAdvanced,
}

var _OrderPlacementSrcNames = []string{
	_OrderPlacementSrcName[0:24],
	_OrderPlacementSrcName[24:37],
	_OrderPlacementSrcName[37:52],
}

// OrderPlacementSrcString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func OrderPlacementSrcString(s string) (OrderPlacementSrc, error) {
	if val, ok := _OrderPlacementSrcNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _OrderPlacementSrcNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to OrderPlacementSrc values", s)
}

// OrderPlacementSrcValues returns all values of the enum
func OrderPlacementSrcValues() []OrderPlacementSrc {
	return _OrderPlacementSrcValues
}

// OrderPlacementSrcStrings returns a slice of all String values of the enum
func OrderPlacementSrcStrings() []string {
	strs := make([]string, len(_OrderPlacementSrcNames))
	copy(strs, _OrderPlacementSrcNames)
	return strs
}

// IsAOrderPlacementSrc returns "true" if the value is listed in the enum definition. "false" otherwise
func (i OrderPlacementSrc) IsAOrderPlacementSrc() bool {
	for _, v := range _OrderPlacementSrcValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for OrderPlacementSrc
func (i OrderPlacementSrc) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for OrderPlacementSrc
func (i *OrderPlacementSrc) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("OrderPlacementSrc should be a string, got %s", data)
	}

	var err error
	*i, err = OrderPlacementSrcString(s)
	return err
}
