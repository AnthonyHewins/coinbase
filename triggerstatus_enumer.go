// Code generated by "enumer -type TriggerStatus -transform snake_upper -trimprefix TriggerStatus -json"; DO NOT EDIT.

package coinbase

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _TriggerStatusName = "UNKNOWN_TRIGGER_STATUSINVALID_ORDER_TYPEINVALID_STOP_PENDINGINVALID_STOP_TRIGGERED"

var _TriggerStatusIndex = [...]uint8{0, 22, 40, 60, 82}

const _TriggerStatusLowerName = "unknown_trigger_statusinvalid_order_typeinvalid_stop_pendinginvalid_stop_triggered"

func (i TriggerStatus) String() string {
	if i >= TriggerStatus(len(_TriggerStatusIndex)-1) {
		return fmt.Sprintf("TriggerStatus(%d)", i)
	}
	return _TriggerStatusName[_TriggerStatusIndex[i]:_TriggerStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TriggerStatusNoOp() {
	var x [1]struct{}
	_ = x[UnknownTriggerStatus-(0)]
	_ = x[TriggerStatusInvalidOrderType-(1)]
	_ = x[TriggerStatusInvalidStopPending-(2)]
	_ = x[TriggerStatusInvalidStopTriggered-(3)]
}

var _TriggerStatusValues = []TriggerStatus{UnknownTriggerStatus, TriggerStatusInvalidOrderType, TriggerStatusInvalidStopPending, TriggerStatusInvalidStopTriggered}

var _TriggerStatusNameToValueMap = map[string]TriggerStatus{
	_TriggerStatusName[0:22]:       UnknownTriggerStatus,
	_TriggerStatusLowerName[0:22]:  UnknownTriggerStatus,
	_TriggerStatusName[22:40]:      TriggerStatusInvalidOrderType,
	_TriggerStatusLowerName[22:40]: TriggerStatusInvalidOrderType,
	_TriggerStatusName[40:60]:      TriggerStatusInvalidStopPending,
	_TriggerStatusLowerName[40:60]: TriggerStatusInvalidStopPending,
	_TriggerStatusName[60:82]:      TriggerStatusInvalidStopTriggered,
	_TriggerStatusLowerName[60:82]: TriggerStatusInvalidStopTriggered,
}

var _TriggerStatusNames = []string{
	_TriggerStatusName[0:22],
	_TriggerStatusName[22:40],
	_TriggerStatusName[40:60],
	_TriggerStatusName[60:82],
}

// TriggerStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TriggerStatusString(s string) (TriggerStatus, error) {
	if val, ok := _TriggerStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TriggerStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to TriggerStatus values", s)
}

// TriggerStatusValues returns all values of the enum
func TriggerStatusValues() []TriggerStatus {
	return _TriggerStatusValues
}

// TriggerStatusStrings returns a slice of all String values of the enum
func TriggerStatusStrings() []string {
	strs := make([]string, len(_TriggerStatusNames))
	copy(strs, _TriggerStatusNames)
	return strs
}

// IsATriggerStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i TriggerStatus) IsATriggerStatus() bool {
	for _, v := range _TriggerStatusValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for TriggerStatus
func (i TriggerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for TriggerStatus
func (i *TriggerStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("TriggerStatus should be a string, got %s", data)
	}

	var err error
	*i, err = TriggerStatusString(s)
	return err
}
